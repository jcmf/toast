head	1.34;
access;
symbols;
locks
	zaphod:1.34; strict;
comment	@# @;


1.34
date	2005.04.11.05.18.00;	author zaphod;	state Exp;
branches;
next	1.33;

1.33
date	2005.04.10.17.50.52;	author zaphod;	state Exp;
branches;
next	1.32;

1.32
date	2005.03.01.05.20.01;	author zaphod;	state Exp;
branches;
next	1.31;

1.31
date	2005.02.26.04.53.39;	author zaphod;	state Exp;
branches;
next	1.30;

1.30
date	2005.02.22.00.13.24;	author zaphod;	state Exp;
branches;
next	1.29;

1.29
date	2005.02.21.19.56.33;	author zaphod;	state Exp;
branches;
next	1.28;

1.28
date	2005.02.18.05.15.27;	author zaphod;	state Exp;
branches;
next	1.27;

1.27
date	2005.02.13.05.00.23;	author zaphod;	state Exp;
branches;
next	1.26;

1.26
date	2005.02.13.04.41.07;	author zaphod;	state Exp;
branches;
next	1.25;

1.25
date	2005.01.15.22.41.36;	author zaphod;	state Exp;
branches;
next	1.24;

1.24
date	2004.11.08.04.25.53;	author zaphod;	state Exp;
branches;
next	1.23;

1.23
date	2004.11.07.20.35.29;	author zaphod;	state Exp;
branches;
next	1.22;

1.22
date	2004.10.10.00.24.53;	author zaphod;	state Exp;
branches;
next	1.21;

1.21
date	2004.09.26.01.36.57;	author zaphod;	state Exp;
branches;
next	1.20;

1.20
date	2004.09.26.00.46.06;	author zaphod;	state Exp;
branches;
next	1.19;

1.19
date	2004.09.20.03.35.51;	author zaphod;	state Exp;
branches;
next	1.18;

1.18
date	2004.09.20.03.31.40;	author zaphod;	state Exp;
branches;
next	1.17;

1.17
date	2004.07.12.04.38.26;	author zaphod;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.06.03.31.29;	author zaphod;	state Exp;
branches;
next	1.15;

1.15
date	2004.05.03.18.25.24;	author zaphod;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.30.21.57.55;	author zaphod;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.30.17.50.44;	author zaphod;	state Exp;
branches;
next	1.12;

1.12
date	2004.04.29.20.03.46;	author zaphod;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.28.21.20.46;	author zaphod;	state Exp;
branches;
next	1.10;

1.10
date	2004.04.28.21.07.09;	author zaphod;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.28.17.55.36;	author zaphod;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.27.17.08.33;	author zaphod;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.27.04.43.58;	author zaphod;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.23.21.39.14;	author zaphod;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.16.21.33.56;	author zaphod;	state Exp;
branches;
next	1.4;

1.4
date	2004.04.16.03.55.20;	author zaphod;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.20.22.00.56;	author zaphod;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.20.06.34.17;	author zaphod;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.20.06.20.31;	author zaphod;	state Exp;
branches;
next	;


desc
@Makefile to generate LVM2 initrd, /etc/inittab and scripts for toast linux
@


1.34
log
@add some hooks to postarm script; add "compact" to lilo.conf
@
text
@RCSID := $$Id: Makefile,v 1.33 2005/04/10 17:50:52 zaphod Exp zaphod $$
NAME := toastinit
VERSION := $(word 3, $(RCSID))
GENBY := generated by $(NAME) version $(VERSION)
MANSECT := 5
MANPAGE := man/man$(MANSECT)/$(NAME).$(MANSECT)
AUTOFILES := $(shell perl -ne 'print $$1 if /^--- FILE (.+ )---$$/' Makefile)
FILES := boot/initrd.gz etc/inittab $(AUTOFILES) $(MANPAGE)

define INSTALLFILE
install -D $(FILE) $(DESTDIR)$(PREFIX)/$(FILE)

endef

all: $(FILES)

install: $(FILES)
	$(foreach FILE, $(FILES), $(INSTALLFILE))

clean:
	rm -fr initrd script root bin boot etc man

.PHONY: all install clean
.DELETE_ON_ERROR:

boot/initrd.gz: initrd
	mkdir -p $(@@D)
	rm -f $@@
	gzip -9 < $< > $@@

initrd: script Makefile
	rm -fr root $@@
	mkdir root root/bin
	ln -s bin root/sbin
	cp /bin/{sh,mount,chroot,lvm,pivot_root} root/bin
	for lib in `ldd root/bin/* | perl -lne 'print $$1 if / => (\/\S+) /' | sort -u`; do install -D $$lib root$$lib || exit $$?; done
	chmod -R +w root
	set -e; find root -type f -print0 | xargs -0 strip
	ln -s lvm root/bin/vgchange
	ln -s lvm root/bin/vgscan
	mkdir root/{newroot,proc,dev,etc,tmp}
	cp script root/bin/init
	genext2fs -b 4096 -d root $@@

etc/inittab: Makefile
	mkdir -p $(@@D)
	rm -f $@@
	echo '# $(GENBY)' >> $@@
	echo '# 0=off; 1=single; 2=headless; 3=1vt; 4=6vt; 5=X; 6=reboot' >> $@@
	echo 'id:5:initdefault:' >> $@@
	echo 'si::sysinit:/etc/rc sysinit' >> $@@
	echo 'ca::ctrlaltdel:/etc/rc ctrlaltdel' >> $@@
	for i in 0 1 2 3 4 5 6; do echo "r$$i:$$i:wait:/etc/rc runlevel $$i" >> $@@; done
	echo '1:345:respawn:/etc/rc getty 1' >> $@@
	for i in 2 3 4 5 6; do echo "$$i:45:respawn:/etc/rc getty $$i" >> $@@; done
	echo '8:5:respawn:/etc/rc X 8' >> $@@

$(AUTOFILES): Makefile
	mkdir -p $(@@D)
	rm -f $@@
	perl -ne 'chmod(0777 & ~umask, "$@@") or die if $$on && m,^#!/,; s/\$$\(GENBY\)/$(GENBY)/g; $$on = 0 if /^--- FILE (.*) ---$$/; print if $$on; $$on ||= $$1 eq "$@@"' $< > $@@

$(MANPAGE): Makefile
	mkdir -p $(@@D)
	rm -f $@@
	pod2man $< > $@@

define DUMMY
--- FILE etc/toast.conf ---
# $(GENBY)
armdir=/usr
postarmprog=postarm
--- FILE bin/postarm ---
#!/bin/sh
# $(GENBY)

armdir=/usr
quiet=false
etc=true
boot="[ boot -nt /boot ]"

verbose()
{
  $quiet || echo "$*"
  "$@@"
}

[ -r /etc/postarmrc ] && . /etc/postarmrc

cd "$armdir"

if $etc; then
  for i in etc/*; do [ -e "/$i" ] || verbose ln -sf "..$armdir/$i" "/$i"; done
  for i in /etc/*; do [ -L "$i" -a ! -e "$i" ] && verbose rm -f "$i"; done
fi

verbose ldconfig

if $boot; then
  for i in /boot/*; do [ -f "$i" ] && verbose rm -f "$i"; done
  for i in boot/*; do [ -f "$i" ] && verbose cp "$i" /boot/; done
  [ -z "$TOASTINIT_NO_LILO" ] && verbose lilo
fi

exit 0
--- FILE script ---
#!/bin/sh
# $(GENBY)
PATH=/bin
export PATH
mount -t proc none /proc &&
  vgscan &&
  vgchange -ay &&
  mount /dev/toast/root /newroot &&
  cd /newroot &&
  pivot_root . mnt &&
  exec chroot . /sbin/init "$@@"
exec /bin/sh
--- FILE etc/rc ---
#!/bin/sh
# $(GENBY)

run() { [ -r "$1" ] && . "$1"; }
runrc() { run "/etc/rc.d/rc.$1"; }
say() { echo "$0: $*"; }
smount() { say "mounting $1"; mount "$@@"; }
start() { say "starting $1"; "$@@"; }

listifs()
{
  if_list=""
  if [ -d /sys/class/net ]; then
    for i in `cd /sys/class/net; echo *`; do
      case "$i" in
        eth*) if_list="$if_list $i";;
      esac
    done
  fi
}

export PATH=/bin
export MANPAGER="less -R"
export TERM=linux
runrc env

case "$1" in
  sysinit)
    runrc sysinit.pre
    say "clearing locks"
    rm -fr /var/{run,lock}/* /tmp/.X*-lock
    for fs in proc sys dev dev/pts; do smount /$fs; done
    start devfsd /dev
    say "unmounting initrd"
    umount /mnt{/dev,/proc,}
    blockdev --flushbufs /dev/ram0
    say "initializing /etc/mtab"
    grep -v "^rootfs " /proc/mounts > /etc/mtab
    say "configuring lo interface"
    ifconfig lo 127.0.0.1
    say "setting hostname"
    hostname localhost
    [ -r /etc/hostname ] && hostname "`cat /etc/hostname`"
    if [ -r /etc/modules ]; then
      for i in `cat /etc/modules`; do modprobe $i; done
    fi
    runrc sysinit
  ;;
  ctrlaltdel)
    runrc ctrlaltdel
    case "$RUNLEVEL" in
      s|S|1) exec telinit -t 5 6;;
      *) exec telinit -t 5 1;;
    esac
  ;;
  runlevel)
    case "$PREVLEVEL" in
      [2-5]) old=up;;
      *) old=down;;
    esac
    case "$RUNLEVEL" in
      [2-5]) new=up;;
      *) new=down;;
    esac
    if [ "$old" != "$new" ]; then
      if [ "$new" = "up" ]; then
        start syslogd
        start klogd
        listifs
        start_if_prog=""
        if [ -x /bin/dhcpcd ]; then
          start_if_prog="dhcpcd -d"
          [ -r /etc/hostname ] || start_if_prog="$start_if_prog -H"
        fi
        runrc net
        if [ -n "$start_if_prog" ]; then
          for i in $if_list; do $start_if_prog $i && break; done
        fi
        automap="/etc/autofs.map"
        autoargs="-t 5"
        runrc up
        [ -x /bin/automount -a -r "$automap" ] &&
            automount -p /var/run/automount.pid $autoargs file "$automap"
      else
        listifs
        runrc down
        sleep 1
        say "sending TERM signal"
        killall5 -15
        sleep 3
        say "sending KILL signal"
        killall5 -9
        sleep 1
        [ -n "$if_list" ] && say "bringing down network:$if_list"
        for i in $if_list; do ifconfig $i down; done
      fi
    fi
    case "$RUNLEVEL" in
      1)
        runrc single
        say "switching to single-user mode"
        exec telinit -t 5 s
      ;;
      [06])
        action=reboot
        [ "$RUNLEVEL" = 0 ] && action=poweroff
        runrc shutdown
        say "unmounting filesystems"
        umount -a
        mount -o remount,ro / ||
          echo 'u' > /proc/sysrq-trigger
        say "$action"
        $action
      ;;
    esac
  ;;
  getty)
    tty="tty$2"
    device="/dev/$tty"
    runrc getty
    exec toastlogin --nofork --tty="$device"
    exec mingetty --noclear "$device"
  ;;
  X)
    tty="tty$2"
    device="/dev/$tty"
    user=""
    opt=""
    if [ -r /etc/user ]; then
      user="`cat /etc/user`"
      opt="--user=$user"
    fi
    runrc X
    [ ! -x /bin/X ] && exec telinit 4
    [ -x /bin/toastlogin ] && exec toastlogin --nofork --tty="$device" --x $opt
    for dm in gdm kdm xdm; do [ -x /bin/$dm ] && exec $dm; done
    exec telinit 4
  ;;
esac
--- FILE etc/lilo.conf ---
# $(GENBY)

boot = /dev/boot
root = /dev/ram0
initrd = /boot/initrd.gz
delay = 40
lba32
compact
read-write

image = /boot/vmlinuz
label = toast

image = /boot/vmlinuz.off
label = oldkernel
optional

image = /boot/vmlinuz.off.off
label = olderkernel
optional

image = /boot/vmlinuz
initrd = /boot/initrd.gz.off
label = oldinitrd
optional

image = /boot/vmlinuz
initrd = /boot/initrd.gz.off.off
label = olderinitrd
optional

image = /boot/vmlinuz.off
initrd = /boot/initrd.gz.off
label = oldboth
optional

image = /boot/vmlinuz.off.off
initrd = /boot/initrd.gz.off.off
label = olderboth
optional
--- FILE etc/fstab ---
/dev/toast/root / ext3 rw 0 0
/dev/toast/boot /boot ext3 nosuid 0 0
proc_ /proc proc nosuid 0 0
sys_ /sys sysfs nosuid 0 0
dev_ /dev devfs nosuid 0 0
devpts_ /dev/pts devpts nosuid 0 0
/dev/fd0 /media/floppy vfat nosuid,noauto,sync 0 0
/dev/cdrom /media/cdrom iso9660 nosoid,noauto,ro,unhide 0 0
--- FILE etc/filesystems ---
vfat
*
--- FILE etc/host.conf ---
# $(GENBY)
order hosts,bind
multi on
--- FILE etc/hosts ---
# $(GENBY)
127.0.0.1 localhost
--- FILE etc/ld.so.conf ---
--- FILE etc/nsswitch.conf ---
# $(GENBY)
hosts: files dns
--- FILE etc/profile ---
# $(GENBY)
PS1='\u@@\h:\w\$ '
--- FILE etc/syslog.conf ---
# $(GENBY)
*.* /var/log/syslog
--- FILE  ---

=head1 NAME

toastinit - init scripts and related files for toast linux

=head1 DESCRIPTION

B<toastinit> contains init scripts and related files used by toast
linux.  It is packaged separately from the toast linux installer, in
order to make it easier for a running toast linux system to upgrade
these files.  The toast linux installer downloads and installs this
package automatically.  Attempting to build or install this package on
a platform other than toast linux is not recommended.

Note that toast linux uses a journalling filesystem on an LVM2 logical
volume as the root filesystem.  At boot time, B<toastinit> always
attempts to mount the root filesystem read-write, without first checking
its integrity.  Since journalling does not eliminate the possibility
of filesystem corruption, it's probably a good idea to periodically
create a snapshot of the root fileystem and check that.  This type of
check can run without disruption to an already-running system, so you
can actually perform a full check more frequently than you would if a
reboot were required.  In an emergency, the toast linux installation
disk can be used as a rescue disk; it contains all the LVM2 tools and
everything else one might need to repair a corrupted root filesystem.


The F</etc/rc> script contains all the necessary logic to run a fully
functioning toast linux system with a minimum of fuss and a maximum of
flexibility.  By default, it will perform a few basic housekeeping tasks
when the system boots, start a handful of essential daemons, allow text
console logins on virtual terminals 1 through 6, and start an X session
on virtual terminal 7 via B<toastlogin>, automatically logging in the user
named in F</etc/user> if that file exists.  The system can be shut down in
the usual way by invoking B<shutdown>, B<halt>, B<poweroff>, B<reboot>,
or similar.  Ctrl-Alt-Del brings the system down to single-user mode,
or reboots if the system is already in single-user mode.

The F</etc/rc> script will check for and invoke "hooks" in the
F</etc/rc.d> directory to supplement, modify, or override its behavior.
Each hook contains bash code that executes in the context of F</etc/rc>,
rather than in a subprocess.  This allows each hook to examine and
modify variables that affect the behavior of the master script.  If a
hook terminates the script with C<exit> or C<exec>, the master script
will never regain control; this can be used to completely override
default behaviors.

=head1 ENVIRONMENT

By default, B<toastinit> runs all processes with the following environment
variable settings:

  PATH="/bin"
  MANPAGER="less -R"
  TERM="linux"

By default, B<toastinit> also allows processes to inherit environment
variables set by B<init> itself, including C<INIT_VERSION>, C<RUNLEVEL>,
C<PREVLEVEL>, C<CONSOLE>, and any variables passed to the kernel by the
boot loader, such as C<BOOT_IMAGE>.  If these defaults are unsuitable
or insufficient, F</etc/rc.d/rc.env> hook can be used to add, override,
or unset environment variables as needed.

User programs (as opposed to system daemons) may see additional variables
set by B<toastlogin>, such as C<LOGNAME>, C<SHELL>, C<HOME>, C<PWD>,
C<MAIL>, C<DISPLAY>, and/or C<XAUTHORITY>.

=head1 FILES

This package builds and installs the following files:

  /boot/initrd.gz            transfers control to the LVM2 root volume
  /etc/inittab               tells init to invoke /etc/rc to manage system
  /etc/rc                    performs all basic system functions
  /usr/man/man5/toastinit.5  this man page

The toast linux installer and/or the administrator may create any of
the following optional configuration files:

  /etc/hostname              the system's hostname (overrides DHCP)
  /etc/user                  the auto-login username for X Windows
  /etc/modules               a list of kernel modules to load at boot time

The administrator may create any of the following optional shell scripts:

  /etc/rc.d/rc.env           runs before every operation to set env vars
  /etc/rc.d/rc.sysinit.pre   runs once on boot, before anything else
  /etc/rc.d/rc.sysinit       runs once on boot, after standard housekeeping
  /etc/rc.d/rc.ctrlaltdel    runs on ctrl-alt-del before going single user
  /etc/rc.d/rc.net           alters or overrides network configuration
  /etc/rc.d/rc.up            starts custom daemons
  /etc/rc.d/rc.down          stops any custom daemons that require coddling
  /etc/rc.d/rc.single        runs when switching to single-user mode
  /etc/rc.d/rc.shutdown      runs when halting or rebooting system
  /etc/rc.d/rc.getty         invoked to help start a console login
  /etc/rc.d/rc.X             invoked to help start an X windows login

=head1 AVAILABILITY

B<toastinit> may be downloaded from C<http://toastball.net/toast/init/>
under the terms of the GNU GPL.

=head1 BUGS

As of this writing, B<toastinit> is in an early stage of development,
and testing has been quite poor.

=head1 AUTHOR

Jacques Frechet

=head1 COPYRIGHT

This manual is part of B<toastinit>.  Copyright (C) 2003-2004 Jacques Frechet.

B<toastinit> is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

B<toastinit> is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with B<toastinit>; if not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

=cut

endef
@


1.33
log
@fix network glitches
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.32 2005/03/01 05:20:01 zaphod Exp zaphod $$
d79 2
d88 2
d92 4
a95 2
for i in etc/*; do [ -e "/$i" ] || verbose ln -sf "..$armdir/$i" "/$i"; done
for i in /etc/*; do [ -L "$i" -a ! -e "$i" ] && verbose rm -f "$i"; done
d99 1
a99 1
if [ boot -nt /boot ]; then
d267 1
@


1.32
log
@postarm: simplify and skip timestamp check for /etc
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.31 2005/02/26 04:53:39 zaphod Exp zaphod $$
d186 1
a186 1
          [ -r /etc/hostname ] || start_if_prog="$dhcpcd -H"
d207 1
a207 1
        [ -n "$if_list" ] && say "bringing down $if_list"
@


1.31
log
@suppress spurious postarm failure when TOASTINIT_NO_LILO is set
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.30 2005/02/22 00:13:24 zaphod Exp zaphod $$
d88 2
a89 8
if [ etc -nt /etc ]; then
  for file in etc/*; do
    [ -e "/$file" ] || verbose ln -sf "..$armdir/$file" "/$file"
  done
  for file in /etc/*; do
    [ -L "$file" -a ! -e "$file" ] && verbose rm -f "$file"
  done
fi
@


1.30
log
@just install lilo in /dev/boot to avoid cross-compile problems
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.29 2005/02/21 19:56:33 zaphod Exp zaphod $$
d104 2
@


1.29
log
@attempt to put boot device in /etc/lilo.conf; fix handling of /boot
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.28 2005/02/18 05:15:27 zaphod Exp zaphod $$
a8 1
BOOT := $(shell for i in `cd /sys/block 2>/dev/null && echo [hs]d[a-z]`; do if [ "`cat /sys/block/$i/removable 2>/dev/null`" = 0 ]; then echo "boot /dev/$i"; exit; fi; done; echo "# boot ???")
d61 1
a61 1
	perl -ne 'chmod(0777 & ~umask, "$@@") or die if $$on && m,^#!/,; s/\$$\(GENBY\)/$(GENBY)/g; s,\$$\(BOOT\),$(BOOT),g; $$on = 0 if /^--- FILE (.*) ---$$/; print if $$on; $$on ||= $$1 eq "$@@"' $< > $@@
d260 1
a260 1
$(BOOT)
@


1.28
log
@point lilo at all plausible boot devices
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.27 2005/02/13 05:00:23 zaphod Exp zaphod $$
d9 1
d62 1
a62 1
	perl -ne 'chmod(0777 & ~umask, "$@@") or die if $$on && m,^#!/,; s/\$$\(GENBY\)/$(GENBY)/g; $$on = 0 if /^--- FILE (.*) ---$$/; print if $$on; $$on ||= $$1 eq "$@@"' $< > $@@
d101 3
a103 7
  verbose rm -f /boot/*
  verbose cp $armdir/boot/* /boot
  if [ -z "$TOASTINIT_NO_LILO" ]; then
    for i in `cd /sys/block && echo [hs]d[abcd]`; do
      [ "`cat /sys/block/$i/removable`" = "0" ] && verbose lilo -b "/dev/$i"
    done
  fi
d261 1
@


1.27
log
@attempt to provide an /etc/fstab of some kind
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.26 2005/02/13 04:41:07 zaphod Exp zaphod $$
d102 5
a106 1
  [ -n "$TOASTINIT_NO_LILO" ] || verbose lilo
@


1.26
log
@check /etc timestamp before running ldconfig
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.25 2005/01/15 22:41:36 zaphod Exp zaphod $$
d296 9
@


1.25
log
@add TOASTINIT_NO_LILO
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.24 2004/11/08 04:25:53 zaphod Exp zaphod $$
a85 2
verbose ldconfig

d97 2
@


1.24
log
@add toast hooks and such; remove references to sbin
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.23 2004/11/07 20:35:29 zaphod Exp zaphod $$
d102 1
a102 1
  verbose lilo
@


1.23
log
@don't depend on /etc/fstab
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.22 2004/10/10 00:24:53 zaphod Exp zaphod $$
d21 1
a21 1
	rm -fr initrd script root boot etc man
d33 4
a36 4
	mkdir root root/bin root/sbin
	cp /bin/{sh,mount,chroot} root/bin
	cp /sbin/{lvm,pivot_root} root/sbin
	for lib in `ldd root/{bin,sbin}/* | perl -lne 'print $$1 if / => (\/\S+) /' | sort -u`; do install -D $$lib root$$lib || exit $$?; done
d39 2
a40 2
	ln -s lvm root/sbin/vgchange
	ln -s lvm root/sbin/vgscan
d42 1
a42 1
	cp script root/sbin/init
d69 35
d107 1
a107 1
PATH=/bin:/sbin
d139 1
a139 1
export PATH=/bin:/sbin
d188 1
a188 1
        if [ -x /sbin/dhcpcd ]; then
d199 1
a199 1
        [ -x /sbin/automount -a -r "$automap" ] &&
d251 1
a251 1
    [ ! -x /bin/X ] && exec /sbin/telinit 4
d254 1
a254 1
    exec /sbin/telinit 4
d258 2
d300 1
d304 1
d308 1
d311 1
d314 1
d369 1
a369 1
  PATH="/bin:/sbin"
@


1.22
log
@use /mnt as temporary pivot_root mount point for initrd during boot
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.21 2004/09/26 01:36:57 zaphod Exp zaphod $$
a4 1
FSTAB := /etc/fstab
d39 2
a40 2
	ln -s lvm root/sbin/vgchange || die
	ln -s lvm root/sbin/vgscan || die
a44 16
script: Makefile $(FSTAB)
	rm -f $@@
	echo "#!/bin/sh" >> $@@
	echo '# $(GENBY)' >> $@@
	echo 'PATH=/bin:/sbin' >> $@@
	echo 'export PATH' >> $@@
	echo 'mount -t proc none /proc &&' >> $@@
	echo '  vgscan &&' >> $@@
	echo '  vgchange -ay &&' >> $@@
	echo "  mount `perl -lane 'print @@F[0] if @@F[1] eq "/"' $(FSTAB)` /newroot &&" >> $@@
	echo '  cd /newroot &&' >> $@@
	echo '  pivot_root . mnt &&' >> $@@
	echo '  exec chroot . /sbin/init "$$@@"' >> $@@
	echo 'exec /bin/sh' >> $@@
	chmod +x $@@

a57 1

d69 13
@


1.21
log
@add more files; correct permissions glitch
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.20 2004/09/26 00:46:06 zaphod Exp zaphod $$
d57 1
a57 1
	echo '  pivot_root . mnt/boot &&' >> $@@
d122 1
a122 1
    umount /mnt/boot{/dev,/proc,}
@


1.20
log
@rejigger into a more flexible framework
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.19 2004/09/20 03:35:51 zaphod Exp zaphod $$
d79 1
a79 1
	perl -ne 'chmod(0777 & ~umask, "$@@") or die if m,^#!/,; s/\$$\(GENBY\)/$(GENBY)/g; $$on = 0 if /^--- FILE (.*) ---$$/; print if $$on; $$on ||= $$1 eq "$@@"' $< > $@@
d227 52
@


1.19
log
@get rid of "make dist"
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.18 2004/09/20 03:31:40 zaphod Exp zaphod $$
d7 3
a9 1
MANPAGE := $(NAME).$(MANSECT)
d11 2
a12 1
all: inittab rc initrd.gz $(MANPAGE)
d14 6
a19 5
install: all
	install -D inittab $(DESTDIR)$(PREFIX)/etc/inittab
	install -D rc $(DESTDIR)$(PREFIX)/etc/rc
	install -D initrd.gz $(DESTDIR)$(PREFIX)/boot/initrd.gz
	install -D $(MANPAGE) $(DESTDIR)$(PREFIX)/man/man$(MANSECT)/$(MANPAGE)
d22 1
a22 1
	rm -fr inittab rc script root initrd initrd.gz $(MANPAGE)
d27 2
a28 1
initrd.gz: initrd
d38 1
d62 2
a63 1
inittab: Makefile
a74 1
UNPACK = rm -f $@@; perl -ne 's/\$$\(GENBY\)/$(GENBY)/g; $$on = 0 if /^--- FILE (.*) ---$$/; print if $$on; $$on ||= $$1 eq "$@@"' $< > $@@
d76 4
a79 3
rc: Makefile
	$(UNPACK)
	chmod +x $@@
d82 2
d87 1
a87 1
--- FILE rc ---
a95 1
stop() { say "stopping $1"; kill `cat /var/run/$1.pid`; }
d227 1
a227 1
--- FILE pod ---
@


1.18
log
@added man page; minor cleanups
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.17 2004/07/12 04:38:26 zaphod Exp zaphod $$
a4 1
TARBALL := $(NAME)-$(VERSION).tar.gz
a16 2
dist: $(TARBALL)

d18 1
a18 1
	rm -fr inittab rc script root initrd initrd.gz $(TARBALL) $(MANPAGE)
d20 1
a20 1
.PHONY: all install dist clean
a76 4
$(TARBALL): Makefile
	rm -f $@@
	tar czf $@@ $^

@


1.17
log
@try to determine default runlevel at run time rather than install time;
fall back more gracefully if toastlogin isn't installed
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.16 2004/05/06 03:31:29 zaphod Exp zaphod $$
d7 2
d10 1
a10 1
all: inittab rc initrd.gz
d16 1
a19 4
$(TARBALL): Makefile
	rm -f $@@
	tar czf $@@ $^

d21 1
a21 1
	rm -fr inittab rc script root initrd initrd.gz $(TARBALL)
d77 7
d98 1
a98 1
  iflist=""
d102 1
a102 1
        eth*) iflist="$iflist $i";;
d115 1
a115 1
    runrc sysinit
d133 1
a133 1
    runrc sysinit.post
d156 1
a156 1
        dhcpcd=""
d158 2
a159 2
          dhcpcd="dhcpcd -d"
          [ -r /etc/hostname ] || dhcpcd="$dhcpcd -H"
d162 2
a163 2
        if [ -n "$dhcpcd" ]; then
          for i in $iflist; do $dhcpcd $i && break; done
d180 2
a181 2
        [ -n "$iflist" ] && say "bringing down $iflist"
        for i in $iflist; do ifconfig $i down; done
d211 2
d214 1
d221 1
a221 1
    [ -x /bin/toastlogin ] && exec toastlogin --nofork --tty="/dev/tty$2" --x $opt
d226 132
a357 1
--- FILE END ---
@


1.16
log
@add rudimentary automounter support; unobfuscate /etc/rc
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.15 2004/05/03 18:25:24 zaphod Exp zaphod $$
a5 1
DEFAULT_RUNLEVEL := $(if $(wildcard /bin/X),5,4)
d64 1
a64 1
	echo 'id:$(DEFAULT_RUNLEVEL):initdefault:' >> $@@
d211 4
a214 2
    exec toastlogin --nofork --tty="/dev/tty$2" --x $opt
    exec xdm
@


1.15
log
@fix stupid typos that prevent dhcp from working
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.14 2004/04/30 21:57:55 zaphod Exp zaphod $$
d73 2
d76 1
a76 130
	rm -f $@@
	echo "#!/bin/sh" >> $@@
	echo '# $(GENBY)' >> $@@
	echo 'name="$(NAME)"' >> $@@
	echo 'version="$(VERSION)"' >> $@@
	echo 'run() { [ -r "$$1" ] && . "$$1"; }' >> $@@
	echo 'runrc() { run "/etc/rc.d/rc.$$1"; }' >> $@@
	echo 'say() { echo "$$0: $$*"; }' >> $@@
	echo 'smount() { say "mounting $$1"; mount "$$@@"; }' >> $@@
	echo 'start() { say "starting $$1"; "$$@@"; }' >> $@@
	echo 'stop() { say "stopping $$1"; kill `cat /var/run/$$1.pid`; }' >> $@@
	echo 'listifs()' >> $@@
	echo '{' >> $@@
	echo '  iflist=""' >> $@@
	echo '  if [ -d /sys/class/net ]; then' >> $@@
	echo '    for i in `cd /sys/class/net; echo *`; do' >> $@@
	echo '      case "$$i" in' >> $@@
	echo '        eth*) iflist="$$iflist $$i";;' >> $@@
	echo '      esac' >> $@@
	echo '    done' >> $@@
	echo '  fi' >> $@@
	echo '}' >> $@@
	echo 'export PATH=/bin:/sbin' >> $@@
	echo 'export MANPAGER="less -R"' >> $@@
	echo 'export TERM=linux' >> $@@
	echo 'runrc env' >> $@@
	echo 'case "$$1" in' >> $@@
	echo '  sysinit)' >> $@@
	echo '    runrc sysinit' >> $@@
	echo '    say "clearing locks"' >> $@@
	echo '    rm -fr /var/{run,lock}/* /tmp/.X*-lock' >> $@@
	echo '    for fs in proc sys dev dev/pts; do smount /$$fs; done' >> $@@
	echo '    start devfsd /dev' >> $@@
	echo '    say "unmounting initrd"' >> $@@
	echo '    umount /mnt/boot{/dev,/proc,}' >> $@@
	echo '    blockdev --flushbufs /dev/ram0' >> $@@
	echo '    say "initializing /etc/mtab"' >> $@@
	echo '    grep -v "^rootfs " /proc/mounts > /etc/mtab' >> $@@
	echo '    say "configuring lo interface"' >> $@@
	echo '    ifconfig lo 127.0.0.1' >> $@@
	echo '    say "setting hostname"' >> $@@
	echo '    hostname localhost' >> $@@
	echo '    [ -r /etc/hostname ] && hostname "`cat /etc/hostname`"' >> $@@
	echo '    if [ -r /etc/modules ]; then' >> $@@
	echo '      for i in `cat /etc/modules`; do modprobe $$i; done' >> $@@
	echo '    fi' >> $@@
	echo '    runrc sysinit.post' >> $@@
	echo '  ;;' >> $@@
	echo '  ctrlaltdel)' >> $@@
	echo '    runrc ctrlaltdel' >> $@@
	echo '    case "$$RUNLEVEL" in' >> $@@
	echo '      s|S|1) exec telinit -t 5 6;;' >> $@@
	echo '      *) exec telinit -t 5 1;;' >> $@@
	echo '    esac' >> $@@
	echo '  ;;' >> $@@
	echo '  runlevel)' >> $@@
	echo '    case "$$PREVLEVEL" in' >> $@@
	echo '      [2-5]) old=up;;' >> $@@
	echo '      *) old=down;;' >> $@@
	echo '    esac' >> $@@
	echo '    case "$$RUNLEVEL" in' >> $@@
	echo '      [2-5]) new=up;;' >> $@@
	echo '      *) new=down;;' >> $@@
	echo '    esac' >> $@@
	echo '    if [ "$$old" != "$$new" ]; then' >> $@@
	echo '      if [ "$$new" = "up" ]; then' >> $@@
	echo '        start syslogd' >> $@@
	echo '        start klogd' >> $@@
	echo '        listifs' >> $@@
	echo '        dhcpcd=""' >> $@@
	echo '        if [ -x /sbin/dhcpcd ]; then' >> $@@
	echo '          dhcpcd="dhcpcd -d"' >> $@@
	echo '          [ -r /etc/hostname ] || dhcpcd="$$dhcpcd -H"' >> $@@
	echo '        fi' >> $@@
	echo '        runrc net' >> $@@
	echo '        if [ -n "$$dhcpcd" ]; then' >> $@@
	echo '          for i in $$iflist; do $$dhcpcd $$i && break; done' >> $@@
	echo '        fi' >> $@@
	echo '        runrc up' >> $@@
	echo '      else' >> $@@
	echo '        listifs' >> $@@
	echo '        runrc down' >> $@@
	echo '        sleep 1' >> $@@
	echo '        say "sending TERM signal"' >> $@@
	echo '        killall5 -15' >> $@@
	echo '        sleep 3' >> $@@
	echo '        say "sending KILL signal"' >> $@@
	echo '        killall5 -9' >> $@@
	echo '        sleep 1' >> $@@
	echo '        [ -n "$$iflist" ] && say "bringing down $$iflist"' >> $@@
	echo '        for i in $$iflist; do ifconfig $$i down; done' >> $@@
	echo '      fi' >> $@@
	echo '    fi' >> $@@
	echo '    case "$$RUNLEVEL" in' >> $@@
	echo '      1)' >> $@@
	echo '        runrc single' >> $@@
	echo '        say "switching to single-user mode"' >> $@@
	echo '        exec telinit -t 5 s' >> $@@
	echo '      ;;' >> $@@
	echo '      [06])' >> $@@
	echo '        action=reboot' >> $@@
	echo '        [ "$$RUNLEVEL" = 0 ] && action=poweroff' >> $@@
	echo '        runrc shutdown' >> $@@
	echo '        say "unmounting filesystems"' >> $@@
	echo '        umount -a' >> $@@
	echo '        mount -o remount,ro / ||' >> $@@
	echo '          echo 'u' > /proc/sysrq-trigger' >> $@@
	echo '        say "$$action"' >> $@@
	echo '        $$action' >> $@@
	echo '      ;;' >> $@@
	echo '    esac' >> $@@
	echo '  ;;' >> $@@
	echo '  getty)' >> $@@
	echo '    tty="tty$$2"' >> $@@
	echo '    device="/dev/$$tty"' >> $@@
	echo '    runrc getty' >> $@@
	echo '    exec toastlogin --nofork --tty="$$device"' >> $@@
	echo '    exec mingetty --noclear "$$device"' >> $@@
	echo '  ;;' >> $@@
	echo '  X)' >> $@@
	echo '    user=""' >> $@@
	echo '    if [ -r /etc/user ]; then' >> $@@
	echo '      user="`cat /etc/user`"' >> $@@
	echo '      opt="--user=$$user"' >> $@@
	echo '    fi' >> $@@
	echo '    runrc X' >> $@@
	echo '    exec toastlogin --nofork --tty="/dev/tty$$2" --x $$opt' >> $@@
	echo '    exec xdm' >> $@@
	echo '  ;;' >> $@@
	echo 'esac' >> $@@
d79 139
@


1.14
log
@add dhcpcd support; use killall5 on shutdown
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.13 2004/04/30 17:50:44 zaphod Exp zaphod $$
d146 1
a146 1
	echo '          [ -r /etc/hostname ] || dhcpcd=" $dhcpcd -H"' >> $@@
d149 1
a149 1
	echo '        if [ -n "$dhcpcd" ]; then' >> $@@
@


1.13
log
@split "/etc/rc runlevel" entry into separate tasks so runlevel changes
(e.g. reboot) will work correctly
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.12 2004/04/29 20:03:46 zaphod Exp zaphod $$
d85 11
d142 6
d149 3
d154 1
a154 8
	echo '        iflist=""' >> $@@
	echo '        if [ -d /sys/class/net ]; then' >> $@@
	echo '          for i in `cd /sys/class/net; echo *`; do' >> $@@
	echo '            case "$$i" in' >> $@@
	echo '              eth*) iflist="$$iflist $$i";;' >> $@@
	echo '            esac' >> $@@
	echo '          done' >> $@@
	echo '        fi' >> $@@
d156 7
a164 4
	echo '        stop klogd' >> $@@
	echo '        say "waiting for daemons to log their last words"' >> $@@
	echo '        sleep 2' >> $@@
	echo '        stop syslogd' >> $@@
@


1.12
log
@removed extra line that was preventing toastlogin from getting a tty
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.11 2004/04/28 21:20:46 zaphod Exp zaphod $$
d68 1
a68 1
	echo 'rl:0123456:wait:/etc/rc runlevel' >> $@@
d70 1
a70 5
	echo '2:45:respawn:/etc/rc getty 2' >> $@@
	echo '3:45:respawn:/etc/rc getty 3' >> $@@
	echo '4:45:respawn:/etc/rc getty 4' >> $@@
	echo '5:45:respawn:/etc/rc getty 5' >> $@@
	echo '6:45:respawn:/etc/rc getty 6' >> $@@
@


1.11
log
@zsh misbehaves if TERM is unset
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.10 2004/04/28 21:07:09 zaphod Exp zaphod $$
a177 1
	echo '    toastlogin --nofork --tty="$$device"' >> $@@
@


1.10
log
@/etc/rc was looking at wrong argument for tty; remove debug spew
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.9 2004/04/28 17:55:36 zaphod Exp zaphod $$
d91 1
@


1.9
log
@fix unbalanced quotes; show arguments for debugging
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.8 2004/04/27 17:08:33 zaphod Exp zaphod $$
d79 1
a79 1
	echo "#!/bin/sh -x" >> $@@
a85 1
	echo 'DEBUG() { say "$$*"; }' >> $@@
a90 1
	echo 'DEBUG "args: $*"' >> $@@
a129 4
	echo '    DEBUG "PREVLEVEL is $$PREVLEVEL"' >> $@@
	echo '    DEBUG "RUNLEVEL is $$RUNLEVEL"' >> $@@
	echo '    DEBUG "old is $$old"' >> $@@
	echo '    DEBUG "new is $$new"' >> $@@
d174 1
a174 1
	echo '    tty="tty$$1"' >> $@@
d178 2
a179 4
	echo '    DEBUG "toastlogin for $$tty returned $$?"' >> $@@
	echo '    [ "$$tty" = "tty1" ] && /bin/sh' >> $@@
#	echo '    exec toastlogin --nofork --tty="$$device"' >> $@@
#	echo '    exec mingetty --noclear "$$device"' >> $@@
d188 1
a188 1
	echo '    exec toastlogin --nofork --tty="/dev/tty$$1" --x $$opt' >> $@@
@


1.8
log
@debug harder
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.7 2004/04/27 04:43:58 zaphod Exp zaphod $$
d92 1
a182 1
	echo '    DEBUG "toastlogin --nofork --tty="$$device"' >> $@@
@


1.7
log
@more debugging nonsense
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.6 2004/04/23 21:39:14 zaphod Exp zaphod $$
d79 1
a79 1
	echo "#!/bin/sh" >> $@@
@


1.6
log
@try to clean up /etc/rc and figure out why it is horribly broken
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.5 2004/04/16 21:33:56 zaphod Exp zaphod $$
d182 6
a187 2
	echo '    exec toastlogin --nofork --tty="$$device"' >> $@@
	echo '    exec mingetty --noclear "$$device"' >> $@@
@


1.5
log
@obtain root device name from /etc/fstab rather than assuming /dev/vg/toast
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.4 2004/04/16 03:55:20 zaphod Exp zaphod $$
d86 1
d90 2
a91 3
	echo 'PATH=/bin:/sbin' >> $@@
	echo 'MANPAGER="less -R"' >> $@@
	echo 'export PATH MANPAGER' >> $@@
d131 4
d136 1
a136 1
	echo '      if [ "$new" = up ]; then' >> $@@
d142 1
a142 1
	echo '        ifs=""' >> $@@
d146 1
a146 1
	echo '              eth*) ifs="$$ifs $$i";;' >> $@@
d151 2
a152 2
	echo '        [ -n "$$ifs" ] && say "bringing down $$ifs"' >> $@@
	echo '        for i in $$ifs; do ifconfig $$i down; done' >> $@@
@


1.4
log
@/sbin/init really ought to have the execute bit set
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.3 2004/03/20 22:00:56 zaphod Exp zaphod $$
d7 1
d45 1
a45 1
script: Makefile
d54 1
a54 1
	echo '  mount /dev/vg/toast /newroot &&' >> $@@
@


1.3
log
@fixed some bugs in the rc script
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.2 2004/03/20 06:34:17 zaphod Exp zaphod $$
d58 1
@


1.2
log
@futzed with dependencies, etc.
@
text
@d1 1
a1 1
RCSID := $$Id: Makefile,v 1.1 2004/03/20 06:20:31 zaphod Exp zaphod $$
d81 6
a86 6
	echo 'run() { [ -r "$$1" ] && . "$$1" }' >> $@@
	echo 'runrc() { run "/etc/rc.d/rc.$$1" }' >> $@@
	echo 'say() { echo "$$0: $*" }' >> $@@
	echo 'smount() { say "mounting $$1"; mount "$$@@" }' >> $@@
	echo 'start() { say "starting $$1"; "$$@@" }' >> $@@
	echo 'stop() { say "stopping $$1"; kill `cat /var/run/$$1.pid` }' >> $@@
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
RCSID := $$Id$$
d5 1
d15 6
d22 1
a22 1
	rm -fr inittab rc script root initrd initrd.gz
d24 6
a29 2
dist:
	tar czf $(NAME)-$(VERSION).tar.gz Makefile
d31 2
a32 2
initrd.gz: script
	rm -fr root initrd
d42 1
a42 2
	genext2fs -b 4096 -d root initrd
	gzip -9 initrd
d44 1
a44 1
script:
d59 1
a59 1
inittab:
d75 1
a75 1
rc:
@
